Vue官网文档

计算属性和侦听器：computed、watch
使用 watch 选项允许我们执行异步操作 (访问一个 API)，限制我们执行该操作的频率，并在我们得到最终结果前，设置中间状态。
这些都是计算属性无法做到的。

Class 与 Style 绑定
Class绑定：
1.对象语法：
①.传一个对象，动态切换class：
<div v-bind:class="{ active: isActive }"></div>
②.在对象中传入更多字段来动态切换多个class，也可以与普通的class的attribute共存：
<div class="static" v-bind:class="{ active: isActive, 'text-danger': hasError }"></div>
data: {
  isActive: true,
  hasError: false
}
③.绑定的数据对象不必内联定义在模板里：
<div v-bind:class="classObject"></div>
data: {
  classObject: {
    active: true,
    'text-danger': false
  }
}
④.也可以绑定一个返回对象的计算属性：
<div v-bind:class="classObject"></div>
data: {
  isActive: true,
  error: null
},
computed: {
  classObject: function () {
    return {
      active: this.isActive && !this.error,
      'text-danger': this.error && this.error.type === 'fatal'
    }
  }
}
2.数组语法：
①.把一个数组传给class，以应用一个class列表：
<div v-bind:class="[activeClass, errorClass]"></div>
data: {
  activeClass: 'active',
  errorClass: 'text-danger'
}
渲染结果：<div class="active text-danger"></div>
②.想要既有一个固定class，也有一个可以根据条件切换列表中的class：
<div v-bind:class="[isActive ? activeClass : '', errorClass]"></div>
<div v-bind:class="[{ active: isActive }, errorClass]"></div>
将始终添加 errorClass，但是只有在 isActive 是 true 时才添加 activeClass。
3.用在组件上（isActive：true）：
①.当在一个自定义组件上使用 class property 时，这些 class 将被添加到该组件的根元素上面。这个元素上已经存在的 class 不会被覆盖。
Vue.component('my-component', {
  template: '<p class="foo bar">Hi</p>'
})
<my-component class="baz boo"></my-component>
<my-component v-bind:class="{ active: isActive }"></my-component>
渲染结果：<p class="foo bar baz boo">Hi</p>
Style绑定：
1.对象语法：
①.十分直观——看着非常像 CSS，但其实是一个 JavaScript 对象：
<div v-bind:style="{ color: activeColor, fontSize: fontSize + 'px' }"></div>
data: {
  activeColor: 'red',
  fontSize: 30
}
②.也可以直接绑定到一个样式对象：
<div v-bind:style="styleObject"></div>
data: {
  styleObject: {
    color: 'red',
    fontSize: '13px'
  }
}
2.数组语法：可以将多个样式对象应用到同一个元素上
div v-bind:style="[baseStyles, overridingStyles]"></div>
3.多重值：
<div :style="{ display: ['-webkit-box', '-ms-flexbox', 'flex'] }"></div>
只会渲染数组中最后一个被浏览器支持的值。


















































