AngularJS 是一个 JavaScript 框架。它可通过 <script></script>标签添加到 HTML 页面。
AngularJS 应用组成如下：
View(视图)			：即 HTML。
Model(模型) 		：当前视图中可用的数据。
Controller(控制器) 	：即 JavaScript 函数，可以添加或修改属性。 

表达式：(表达式，数字，对象，数组)
{{ expression }}	：表达式，用于输出数据，与 ng-bind 指令有异曲同工之妙
<p>总价: <span ng-bind="quantity * cost"></span></p>
<p>总价: {{ quantity * cost }}</p>

指令：必须放在HTML元素中才可以使用
ng-app 				：指令定义一个 AngularJS 应用程序。(div)
ng-model			：指令把元素值（比如输入域的值）绑定到应用程序。
ng-bind 			：指令把应用程序数据绑定到 HTML 视图，
ng-click			：点击事件
ng-submit			：事件方法
ng-init 			：指令初始化 AngularJS 应用程序变量。(不常用)
ng-controller		：定义一个控制器
ng-repeat 			：对于集合中（数组中）的每个项会 克隆一次 HTML 元素
<ul>
  <li ng-repeat="x in names">
    {{ x.name + ', ' + x.country }}
  </li>
</ul>
x表示的是一个数组/对象中的单个整体。
ng-options			：用于创建下拉列表，循环
ng-disabled			：按钮是否可用，与css的disabled属性对应
ng-show				：显示/隐藏
ng-hide				：隐藏/显示
ng-switch			：同switch
ng-switch-when		：同case
ng-include			：包含

AngularJS 模块：angular.module()
模块是应用控制器的容器，控制器通常属于一个模块。
var app = angular.module('myApp', []);

AngularJS 控制器：app.controller()
(与ng-init作用差不多类似，初始化值)
AngularJS 控制器控制 AngularJS 应用程序的数据，是常规的 JavaScript 对象。
<div ng-app="myApp" ng-controller="myCtrl"></div>
app.controller('myCtrl', function($scope) {
    $scope.firstName= "John";
    $scope.lastName= "Doe";
	$scope.save = function(){
		alert($scope.message);
	}
});
$scope.todoList.push({todoText:$scope.todoInput, done:false});
数组中的push方法，可以将对象/数值存入数组。

AngularJS Scope(作用域) ：
Scope(作用域) 是应用在 HTML (视图) 和 JavaScript (控制器)之间的纽带。
scope 是模型。
scope 是一个 JavaScript 对象，带有属性和方法，这些属性和方法可以在视图和控制器中使用。

AngularJS forEach(循环) ：angular.forEach()
与指令的循环类似，不过forEach用在js中
angular.forEach(oldList, function(x) {
	if (!x.done) $scope.todoList.push(x);
});

AngularJS 过滤器：(|)
currency		：格式化数字为货币格式。(带$符号，后面小数字两位)
filter			：从数组项中选择一个子集。(依据表单中输入的数据过滤筛选，得到数组中相应的的子集)
uppercase		：格式化字符串为大写。
lowercase		：格式化字符串为小写。
orderBy			：根据某个表达式排列数组。(字母顺序)
也可以自己定义过滤器
<p><input type="text" ng-model="test"></p>
<ul>
  <li ng-repeat="x in names | filter:test | orderBy:'country'">
    {{ (x.name | uppercase) + ', ' + x.country }}
  </li>
</ul>
<p>总价 = {{ (quantity * price) | currency }}</p>

AngularJS 服务(Service) ：函数或对象
AngularJS 中你可以创建自己的服务，或使用内建服务。
AngularJS 内建了30 多个服务。
过滤器(filter)也可以跟自定义服务(service)结合使用。
$location		：返回当前页面的 URL 地址
$http			：向服务器发送请求，响应服务器传送过来的数据
$timeout		：一段时间后执行一次
$inteval		：每隔一段时间执行一次
$index			：显示序号(从0开始)
$even			：
$odd			：

AngularJS XMLHttpRequest：($http，Ajax异步刷新)
$http 			：一个用于读取web服务器上数据的服务。 
$http.get(url) 	：是用于读取服务器数据的函数。
{
	app.controller('siteCtrl', function($scope, $http) {
	  $http.get("http://www.runoob.com/try/angularjs/data/sites.php")
	  .then(function (response) {
		$scope.names = response.data.sites;
		});
	});
} 
{
	app.controller('siteCtrl', function($scope, $http) {
		$http({
			method: 'GET',
			url: 'http://www.runoob.com/try/angularjs/data/sites.php'
		}).then(function successCallback(response) {
				$scope.names = response.data.sites;
			}, function errorCallback(response) {
				// 请求失败执行代码
		});
	});
}

AngularJS Select(选择框)：ng-option 指令
使用 ng-options 的选项是一个对象， ng-repeat 是一个字符串。
ng-options 指令更适合创建下拉列表
**************************************************
x 为键(key), y 为值(value):
<select ng-model="selectedSite" ng-options="x for (x, y) in sites">
</select>
<h1>你选择的值是: {{selectedSite}}</h1>
app.controller('myCtrl', function($scope) {
    $scope.sites = {
	    site01 : "Google",
	    site02 : "Runoob",
	    site03 : "Taobao"
	};
});
***************************************************
<select ng-model="selectedCar" ng-options="y.brand for (x, y) in cars">
</select>
<p>你选择的是: {{selectedCar.brand}}</p>
<p>型号为: {{selectedCar.model}}</p>
<p>颜色为: {{selectedCar.color}}</p>
app.controller('myCtrl', function($scope) {
    $scope.cars = {
        car01 : {brand : "Ford", model : "Mustang", color : "red"},
        car02 : {brand : "Fiat", model : "500", color : "white"},
        car03 : {brand : "Volvo", model : "XC90", color : "black"}
    }
});

AngularJS 事件：ng-click指令
<button ng-click="count = count + 1">点我！</button>

AngularJS 表单：输入控件的集合。
HTML 控件：input/select/button/textarea
数据绑定	：text
复选框		：checkbox(单个值为Boolean值)
单选框		：radio(单选框使用同一个 ng-model ，可以有不同的值，但只有被选中的单选按钮的值会被使用)
下拉菜单	：select option(同一个ng-model)

AngularJS 输入验证：可以验证输入的数据
$dirty		：表单有填写记录
$valid		：字段内容合法的
$invalid	：字段内容是非法的
$pristine	：表单没有填写记录

AngularJS API：Application Programming Interface（应用程序编程接口）
全局 API 函数使用 angular 对象进行访问
angular.lowercase()		：转换字符串为小写
angular.uppercase()		：转换字符串为大写
angular.isString()		：判断给定的对象是否为字符串，是则为true
angular.isNumber()		：判断给定的对象是否为数字，是则为true

AngularJS 包含：
在 AngularJS 中，你可以在 HTML 中包含 HTML 文件。
<div ng-include="'sites.htm'"></div>
<script>
var app = angular.module('myApp', []);
app.controller('sitesCtrl', function($scope, $http) {
    $http.get("sites.php").then(function (response) {
        $scope.names = response.data.records;
    });
});
</script>
在sites.htm文件中：(AngularJS 代码包含在 "sites.htm" 文件中)
<table>
<tr ng-repeat="x in names">
<td>{{ x.Name }}</td>
<td>{{ x.Url }}</td>
</tr>
</table>
通过Ajax跨域获取的sites.php文件，里面包含对象信息。

AngularJS 动画 ：
AngularJS 使用动画需要引入 angular-animate.min.js 库
还需在应用中使用模型 ngAnimate：
<body ng-app="ngAnimate">
AngularJS 动画可以结合css一起使用
div.ng-hide {
  animation: 0.5s myChange;
}
<div ng-hide="myCheck">
css过渡：
transition: all linear 0.5s;
css动画：
@keyframes myChange {
  from {
      height: 100px;
  } to {
      height: 0;
  }
}
animation: 0.5s myChange;

AngularJS 路由：实现多视图的单页 Web 应用
AngularJS 路由允许我们通过不同的 URL 访问不同的内容






































